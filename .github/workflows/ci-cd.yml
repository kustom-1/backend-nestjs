name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}        

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install



      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-nestjs:latest,${{ secrets.DOCKERHUB_USERNAME }}/backend-nestjs:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          script: |
            # Crear directorio en home del usuario si no existe
            mkdir -p ~/backend-nestjs
            cd ~/backend-nestjs

            # Clonar o actualizar repositorio
            if [ -d .git ]; then
              git pull origin main
            else
              git clone https://github.com/${{ github.repository }}.git .
            fi

            # Crear archivo .env
            echo "${{ secrets.ENV_PROD }}" > .env

            # Desplegar con docker compose
            export DOCKER_IMAGE_BACKEND=${{ secrets.DOCKERHUB_USERNAME }}/backend-nestjs:${{ github.sha }}
            docker compose pull backend
            
            docker compose up -d --no-deps 